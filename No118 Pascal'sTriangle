//Easy alogrithm

//Code One: myself code, so suck! REALLY SUCK!!!!!!

public class Solution {
    public List<List<Integer>> generate(int numRows) {
        
	        List<Integer> line=new ArrayList<Integer>();
	        List<List<Integer>> result=new ArrayList<List<Integer>>();
	        if(numRows==0)
	        	return result;
	        else if(numRows==1)
	        {
	        	line.add(1);
	        	result.add(line);
	        	return result;
	        }
	        else if(numRows==2)
	        {
	        	line.add(1);
	        	result.add(line);
	        	List<Integer> myline=new ArrayList<Integer>();
	        	myline.add(1);
	        	myline.add(1);
	            result.add(myline);
	            return result;
	        }
	        else
	        {
	        	line.add(1);
	        	result.add(line);
	        	List<Integer> myline=new ArrayList<Integer>();
	        	myline.add(1);
	        	myline.add(1);
	            result.add(myline);
	            int i,j,k;
	            for(i=3;i<=numRows;i++)
	            {
	            	List<Integer> newline=new ArrayList<Integer>();
	            	newline.add(0, 1);
	            	for(j=0,k=1;k<myline.size();j++,k++)
	            	{
	                     newline.add(myline.get(j)+myline.get(k));
	            	}
	            	newline.add(1);
	            	result.add(newline);
	            	myline.clear();
	            	myline.addAll(newline);
	            }
	        }
	        List<Integer> mynewline=new ArrayList<Integer>();
	        mynewline.add(1);
	        mynewline.add(1);
	        result.set(1, mynewline);
	        return result;
	    
    }
}



//Code Two: copy the code from website, better than my codes
public class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> result = new ArrayList<List<Integer>>();
        if(numRows == 0)
            return result;
        ArrayList<Integer> first = new ArrayList<Integer>();
        first.add(1);
        result.add(first);
        
        for(int n = 2; n <= numRows; n++){
            ArrayList<Integer> thisRow = new ArrayList<Integer>();
            thisRow.add(1);
            List<Integer> previousRow = result.get(n- 2);
            for(int i = 1; i < n - 1; i++){
                thisRow.add(previousRow.get(i - 1) + previousRow.get(i));
            }
            thisRow.add(1);
            result.add(thisRow);
        }
        
        return result;
    }
}
