/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
 
 //Java Code from web, use Depth-first Search algorithm by recursive
public class Solution {
     
    List<String> paths=new ArrayList<String>();
    private void dfs(TreeNode p, String path)
    {
        if(p.left==null && p.right==null) paths.add(path);
        if(p.left!=null) dfs(p.left,path+"->"+p.left.val);
        if(p.right!=null) dfs(p.right,path+"->"+p.right.val);
    }
    public List<String> binaryTreePaths(TreeNode root) 
    {
        if(root!=null)
           dfs(root,String.valueOf(root.val));
        return paths;
    }
}
